<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
	<title>untitled</title>
	<meta http-equiv="content-type" content="text/html;charset=utf-8" />
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
    <script type="text/javascript" src="/scripts/guiders.js"></script>
    <link rel="stylesheet" href="/stylesheets/guiders.css" type="text/css" />
	<style>
		body {
			margin:0px;
			padding:0px;
			background-color:steelblue;
			background:url("/images/cloud.jpg");
		}


		#header {
			height:60px;
			width:100%;
			top:0px;
			position:fixed;
			background-color:rgba(221,221,221,0.6);
			box-shadow: 0 0 15px 1px black;
			border-bottom-left-radius:15px;
			border-bottom-right-radius:15px;
		}
		
		#header, #footer {
			width:900px;
		}
		#content {
			position:fixed;
			width:1000px;
		}
		
		#header, #footer{
			border:1px solid rgba(250,250,250,0.6);
			z-index:5;
		}
		
		#content {
			background-color:rgba(221,221,221,0.8);
			box-shadow: 0 0 15px 2px black;
			bottom:0px;
			top:0px;
			border-left:2px solid rgba(250,250,250,0.8);
			border-right:2px solid rgba(250,250,250,0.8);
			padding-top:80px;
			padding-left:30px;
		}

		.category {
			position:relative;
			width:160px;
		}		
		.p_category {
			position:relative;
			width:160px;
		}	
		#footer {
			height:50px;
			position:fixed;
			bottom:0px;
			background-color:rgba(221,221,221,0.6);
			box-shadow: 0 0 15px 1px black;
			border-top-left-radius:15px;
			border-top-right-radius:15px;
		}
		#edit_tab {
			position:fixed;
			top:400px;
			right: 0px;
			height:200px;
			width:21px;
			background-color:rgba(221,221,221,0.8);
			box-shadow: 0 0 5px 1px black;
			border-bottom-left-radius:15px;
			border-top-left-radius:15px;
		}
		#edit_tab.open {
			position:fixed;
			top:200px;
			right: 0px;
			height:200px;
			width:601px;
			background-color:rgba(221,221,221,0.8);
			box-shadow: 0 0 5px 1px black;
			border-bottom-left-radius:15px;
			border-top-left-radius:15px;
		}
		#admin_tab {
			position:fixed;
			top:150px;
			left: 0px;
			height:400px;
			width:21px;
			background-color:rgba(221,221,221,0.85);
			box-shadow: 0 0 5px 1px black;
			border-bottom-right-radius:15px;
			border-top-right-radius:15px;
			overflow:hidden;
		}
		#admin_tab.open {
			position:fixed;
			top:150px;
			left: 0px;
			height:400px;
			width:601px;
			background-color:rgba(221,221,221,0.85);
			box-shadow: 0 0 5px 1px black;
			border-bottom-right-radius:15px;
			border-top-right-radius:15px;
			overflow:hidden;
		}
		#switch_admin {
			position:absolute;
			width:20px;
			height:400px;
			background-color:rgba(200,200,200,1);
			right:0px;
			top:0px;
			border-bottom-right-radius:15px;
			border-top-right-radius:15px;
			padding-left:5px;
		}
		#switch {
			position:absolute;
			width:20px;
			height:200px;
			background-color:rgba(200,200,200,1);
			left:0px;
			border-bottom-left-radius:15px;
			border-top-left-radius:15px;
			padding-left:5px;
		}
		#login_area {
			//border:1px solid pink;
			width:900px;
			position:relative;
			left:20px;
			top:5px;
		}
		#search_area {
			//border:1px solid pink;
			width:900px;
			position:absolute;
			left:400px;
			top:15px;
		}
		input[type=text],input[type=password] {
			border-style:none;
			margin-top:0px; 
			margin-bottom:0px;
			width:160px;
			background-color:rgba(250,250,250,0.6);
		}
		textarea {
			border:0px;
			background-color:rgba(250,250,250,0.6);
			width:160px; 
			height:90px;
			resize:none;
		}
		textarea .p_desc{
			border:0px;
			background-color:rgba(250,250,250,0.6);
		}
		select {
			border-style:none;
			background-color:rgba(250,250,250,0.3);
		}
		option {
			
		}
		#email.textlabel {
			border:none;
			background-color:rgba(0,0,0,0);
		}
		button {
			background-color:rgba(220,220,220,0.3);
			text-shadow:1px 0px rgba(250,250,250,1);
			color:rgba(100,100,100,1); 
			font:normal normal normal 13px/normal Arial;
		}
		button:hover {
			background-color:rgba(220,220,220,0.6);
			font:normal normal normal 13px/normal Arial;
			color:black;
		}
		#preview_frame {
			position:absolute;
			left:65px;
			top:20px;
			height:110px; 
			width:110px;
			border-radius:10px;
			border:2px dashed rgba(250,250,250,0.9);
			color:rgba(100,100,100,1);
			text-shadow:2px 0px rgba(250,250,250,1);
			font-size:15px;
		}
		#preview {
			position:relative;
			left:5px;
			top:5px;
            cursor: pointer;
		}
		#product_info {
			position:absolute;
			top:9px;
			left:229px;
			width:370px;
		}
		td {
			border:0px solid gray;
		}
		#product_list_frame li {
			color:rgba(100,100,100,1);
			text-shadow:2px 0px rgba(250,250,250,1);
			border-bottom:2px solid rgba(230,230,230,0.8);
			padding-top:15px; 
			margin:0px;
			height:120px;
		}
		#my_product_list_frame li {
			color:rgba(100,100,100,1);
			text-shadow:2px 0px rgba(250,250,250,1);
			border-bottom:2px solid rgba(230,230,230,0.8);
			padding-top:15px; 
			margin:0px;
			height:120px;
		}
		#product_list_frame .product_item {
			position:relative;
			left:50px;
			width:850px;
			height:160px; 
		}
		#product_list_frame .product_item .p_logo {
			border:1px solid gray;
			width:110px; 
			height:110px;
		}
		#my_product_list_frame .p_logo {
			border:1px solid gray;
			width:110px; 
			height:110px;
		}
		#product_list_frame .product_item .p_table {
			position:absolute;
			top:0px;
			left:150px;
			font:normal normal normal 15px/normal Arial;
		}
		#product_info table tr td {
			color:rgba(100,100,100,1);
			text-shadow:2px 0px rgba(250,250,250,1);
			font:normal normal normal 13px/normal Arial;
		}
		.product_item .edit_product {
			position: absolute;
			width:80px;
			height:100px;
			left:770px;
			top:0px;
			color:gray;
			background-color:rgba(10,220,10,0.3);
		}
		.product_item .edit_product:hover {
			background-color:rgba(10,220,10,0.6);
			color:black;
		}
		.product_item .del_product {
			position: absolute;
			width:80px;
			height:100px;
			left:680px;
			top:0px;
			color:gray;
			background-color:rgba(220,10,10,0.3);
		}
		.product_item .del_product:hover {
			background-color:rgba(220,10,10,0.6);
			color:black;
		}
		a:link {text-decoration:none;}
		a:visited {text-decoration:none;}
		a:hover {text-decoration:underline;}
		a:active {text-decoration:none;}
		
		#admin_tab td {
			border:0px solid pink;
			color:rgba(100,100,100,1);
			text-shadow:2px 0px rgba(250,250,250,1);
			font:normal normal normal 13px/normal Arial;
		}
	</style>
</head>

<body>
	
	<div id="header">
		<div id="login_area">
			<table>
				<tr>
					<td style="width:65px;font-size:10px;color:gray;">USEREMAIL</td>
					<td ><input type="text" value="" title="USER EMAIL" id="email" 
					style="margin-top:0px; margin-bottom:0px;"></td>
				</tr>
				<tr>
					<td style="width:65px;font-size:10px;color:gray;">PASSWORD</td>
					<td><input type="password" id="passwd"></td>
				</tr>
			</table>
			
			
			<button id="login" style="position:absolute; top:3px; left:245px;height:45px;">
				Log In
			</button>
		</div>
		<div id="search_area">
			<select id="category1" class="category" title="Search in"></select>
			<input type="text" style="width:200px;" id="keywd" title="Search for">
			<button id="search" title="Search product in that category.
If no keywrd specified, list all products in that category.">Search Item</button>
		</div>
	</div>
	
	<div id="content">
		<ul id="product_list_frame" style="position:absolute; width:90%;height:600px;top:70px; 
		left:40px; list-style:none; padding:0px;margin:0px;margin-bottom:80px; overflow-y:auto; ">
		</ul>
		<table style="position:absolute; bottom:70px; width:100%;font:normal normal normal 13px/normal Arial;">
			<tr >
				<td style="text-align:center;color:rgba(100,100,100,1);	text-shadow:2px 0px rgba(250,250,250,1);">
					GO TO PAGE:
					<select id="page_num"  style="width:50px;" current_offst=0>
						<option offst=0>1</option>
					</select>
				</td>
			</tr>
		</table>
	</div>
	
	<div id="footer">
		<table style="position:absolute; bottom:10px; width:100%; height:30px;">
			<tr >
				<td style="text-align:center;color:rgba(100,100,100,1);	text-shadow:2px 0px rgba(250,250,250,1);">
					Copyright © 2013  <a href="mailto:kxing@srspharmacy.com" 
					style="color:rgba(100,100,100,1);text-shadow:2px 0px rgba(250,250,250,1);">
					KUAN
					</a>
				</td>
			</tr>
		</table>
	</div>
	
	<div id="edit_tab">
		<div id="switch"><br><br><br><br>◄</div>
		<div id="preview_frame">
			<input type="file" id="img_file" style="display:none;" />
			<canvas id="preview" width=100 height=100></canvas>
			<br><br>Click above to upload picture.
		</div>
		<div id="product_info">
			<table>
				<tr>
					<td>name</td><td><input type="text" id="product_name" maxlength="50"></td>
				</tr>
				<tr>
					<td>category</td><td><select id="product_category" class="category"></select></td>
				</tr>
				<tr>
					<td>price</td><td><input type="text" id="product_price" maxlength="8"></td>
				</tr>
				<tr>
					<td>amount</td><td><input type="text" id="product_amnt" maxlength="6"></td>
				</tr>
				<tr>
					<td>description</td>
					<td><textarea id="product_desc" rows=3 maxlength="200" 
					style="width:160px; height:60px; resize:none;"></textarea></td>
				</tr>
			</table>
		</div>
		<button id="add_new" style="position: absolute; width:50px;
		 height:65px; left:510px; top:120px;">Add Item
		 </button>
	</div>
	
	
<!--
	admin_tab for now is for showing the user stuff rather than administration
-->
	<div id="admin_tab">
		<button id="search_my" style="width:200px; color:rgba(100,100,100,1);margin-top:10px;
		margin-left:10px;text-shadow:2px 0px rgba(250,250,250,1);">
		SHOW MY STUFF
		</button>
		<button id="chg_pswd" style="position:absolute; width:200px; color:rgba(100,100,100,1);top:10px;
		left:300px;text-shadow:2px 0px rgba(250,250,250,1);">
		CHANGE MY PASSWORD
		</button>
		<ul id="my_product_list_frame" style="position:absolute; width:560px;height:320px;top:35px; 
		left:10px; list-style:none; padding:0px;margin:0px; overflow-y:auto; border:0px solid purple;">
		</ul>
		<table style="position:absolute; bottom:15px; width:100%;font:normal normal normal 13px/normal Arial;">
			<tr >
				<td style="text-align:center;color:rgba(100,100,100,1);	text-shadow:2px 0px rgba(250,250,250,1);">
					GO TO PAGE:
					<select id="my_page_num"  style="width:50px;" current_offst=0>
						<option offst=0>1</option>
					</select>
				</td>
			</tr>
		</table>
		<div id="switch_admin"><br><br><br><br><br><br><br><br>►</div>
	</div>

	<script>
        // these guiders are welcome screen wizard.
        var admin_email="kxing@srspharmacy.com";

        // this is the first welcome screen
		guiders.createGuider({
		  buttons: [{name: "No, thanks.", onclick: guiders.hideAll},
					{name:"Yes, show me around.", onclick: guiders.next}
		  ],
		  description: "This is a super simple online store, "+
          "here you will be able to upload you stuff info, do a sale as in your garage."+
          "<br><hr> If you need a user account, please contact "+
          "<a href='mailto:kxing@srspharmacy.com' "+
          "title='please email "+admin_email+" to get user account.'>"+
          "WEB-ADMIN</a> to get it. Let's go to introduction!",
		  id: "welcome",
		  next: "login_intro",
		  overlay: true,
		  title: "Welcome to Online Grocery Store!"
		}).show();
		
        // this is login area intro.
		guiders.createGuider({
		  attachTo: "#login_area table",
		  buttons: [{name: "Go away", onclick: guiders.hideAll},
                    {name: "Ok, next", onclick: guiders.next},
          ],
		  description: "Input the user email and password here. If you do not have one,"+
          "please contact <a href='mailto:kxing@srspharmacy.com' "+
          "title='please email "+admin_email+" to get user account.'>"+
          "WEB-ADMIN</a> to get one.",
		  id: "login_intro",
          next: "search_area_intro",
		  position: 2,
		  title: "You can LOG IN to upload your stuff info.",
		  width: 300
		});

        // this is header search area intro.
		guiders.createGuider({
		  attachTo: "#search_area #search",
		  buttons: [{name: "Back"},
                    {name: "Go away", onclick: guiders.hideAll},
                    {name: "Ok, next", onclick: guiders.next},
          ],
		  description: "You can search stuff by clicking Search Item button."+
          "If no keyword in the search box, then it will list all stuffs in the "+
          "category shown in category box(you can change to another category, of course.), "+
          "otherwise, it will list stuff with description or name matched.",
		  id: "search_area_intro",
          next: "upload_area_intro",
		  position: 5,
		  title: "You can SEARCH stuffs by keyword or just browse the whole category.",
		  width: 500
		});
		
        // this is stuff upload area intro.
		guiders.createGuider({
		  attachTo: "#edit_tab #switch",
		  buttons: [{name: "Back"},
                    {name: "Go away", onclick: guiders.hideAll},
                    {name: "Ok, next", onclick: guiders.next},
          ],
		  description: "In this area, you can upload your stuff info, like pictures,"+
          "product sales parameters. Click ◄ to get it out. <b>DO NOT</b> forget to log in! <hr>"+
          "<b><span style='color:red;'>If this wizard bubble blocks you sight</span></b>"+
          ", just drag and move it somewhere else.",
		  id: "upload_area_intro",
          next: "personal_area_intro",
		  position: 9,
		  title: "You can UPLOAD stuffs info here.",
		  width: 300
		});
        
        // this is personal stuff area intro.
		guiders.createGuider({
		  attachTo: "#switch_admin",
		  buttons: [{name: "Back"},
                    {name: "Go away", onclick: guiders.hideAll},
                    {name: "Ok, next", onclick: guiders.next},
          ],
		  description: "In this area, you can get your stuff list, "+
          "and set your new password. Click ► to get it out. <b>DO NOT</b> forget to log in!<hr>"+
          "<b><span style='color:red;'>If this wizard bubble blocks you sight</span></b>"+
          ", just drag and move it somewhere else.",
		  id: "personal_area_intro",
          next: "finish",
		  position: 3,
		  title: "You can GET and SET your personal info here.",
		  width: 300
		});    
        
        // this is personal stuff area intro.
		guiders.createGuider({
		  buttons: [{name: "Show again.", onclick: guiders.next},
                    {name: "Ok, I am READY.", onclick: guiders.hideAll},
          ],
		  description: "If there is still anything you got question, please email "+
                    "<a href='mailto:kxing@srspharmacy.com' "+
          "title='please email "+admin_email+".'>"+
          "WEB-ADMIN.</a>",
		  id: "finish",
          next:"login_intro",
		  title: "Are you READY?",
          overlay: true,
		  width: 300
		});    
        
        

		jQuery(function($){
            // make the tip bubble movable
			$(".guider").draggable();
            
            
			//global variable for sync ajax request
			var cur_category_list={};
			var cur_product_info={};
			var cur_my_product_info={};
			
			// store current query for changing page.
			var current_query="";
			var num_per_page=8;

			// cur_r is used for building product list params
			var cur_r={};
			// this is dedicated for my stuff tab
			var cur_my_r={};
			
			var img_data='';
			var cur_user_id=undefined;
			var authenticated=false;
			
/////////////////////////////////////////////////////////////////////////////////////////
			// most client side operation should involve this first. 
			function auth_user(suc_cb, err_cb){
			// originally I plan to send out a user_id to server to auth
			// later I found the cookie can store that info and auto sent with request.
			// the returned data will be in JSON format and there is a "authed" var can show if
			// this user has been authened. The return data will be automatically binded to first 
			// param of callback function.
				$.ajax({
					url:"/auth/",
					type:"POST",
					datatype:'JSON',
					success: suc_cb,
					error: err_cb||function(err){alert(err.responseText);}
				});
			};

			// Global control for authentication status
			function not_authed(){
				$('#login').text('Log In');
				$('#email').removeAttr('readonly');
				$('#email').val('');
				$('#email').removeClass('textlabel');
				$('#passwd').val('');
				$('#passwd').show();
				$('#email').focus();
			};
			function is_authed(data){
				$('#login').text('Log out');
				$('#email').val(data.user_email);
				$('#email').attr('readonly', 'readonly');
				$('#email').addClass('textlabel');
				$('#passwd').hide();
			};
			//Some utils for form validation
			function isNumeric(num) {
			  return !isNaN(parseFloat(num)) && isFinite(num);
			};
			function isEmpty(txt){
				return (txt.trim().length==0);
			}

// Deep copy a JSON object
function clone(a) {
   return JSON.parse(JSON.stringify(a));
}

				
			// One thing to remember, when you want to do a html mangling,
			// you can use jQuery .text(), it can convert those.
			
			//Global Product Form validation
			function valid_form( p_form ){
				var tips='';
/* the form passed in looks like this:
				var product_form = {
					name:$("#product_name").val(),
					category:$("#product_category").attr("selected_id"),
					price:$("#product_price").val(),
					amount:$("#product_amnt").val(),
					description:$("#product_desc").val(),
					img_data:img_data
				};
*/
				if( isEmpty(p_form.name) ){
					tips+="You need fill name. ";
				}
				if( !isNumeric(p_form.price) ){
					tips+="You need a valid price number. ";
				}
				if( !isNumeric(p_form.amount) ){
					tips+="You need a valid amount number. ";
				}
				if( isEmpty(p_form.description) ){
					tips+="You need to describe your product."
				}
				if(tips.length==0){
					return {valid:true, tips:tips};
				}
				else {
					return {valid:false, tips:tips};
				}				
			};
			
/////////////////////////////////////////////////////////////////////////////////////////////////////////			

			
			// this function is for getting all category info from server
			// data return from server is all category id and name
			
	//!!!!!!! THIS AJAX IS SYNC RATHER THAN ASYNC TO MAKE SURE WE GET THE CAT_INFO FIRST!!!!!!!!!//
			function get_category(suc_cb, err_cb){
				$.ajax({
					url:"/s_category/",
					type:"POST",
					datatype:'JSON',
					success: suc_cb,
					error:err_cb||function(){alert('Failed to get category info.');},
					async:false
				});
			};
			
			// init a request to get product data and trigger suc_cb
			function get_product(req_info, suc_cb, err_cb ){
				// return data contains total number of products, first page list
				// 
				$.ajax({
					url:"/s_product/",
					type:"POST",
					datatype:"JSON",
					data:req_info,// here we need to do more work.
					success:suc_cb,
					error:err_cb||function(){alert("Failed to get products info.");},
					async:false
				});
			};
			
			// init a request to get MY product data and trigger suc_cb
			function get_my_product(req_info, suc_cb, err_cb ){
				// return data contains total number of products, first page list
				// 
				$.ajax({
					url:"/s_my_product/",
					type:"POST",
					datatype:"JSON",
					data:req_info,// here we need to do more work.
					success:suc_cb,
					error:err_cb||function(){alert("Failed to get products info.");},
					async:false
				});
			};
			
			// this part is for query initial data to fill out category and 
			// according product list within that category
			function fill_category(data){
				// here, the data is an array
				cur_category_list = {};
				var category_list='';
				$.each(data, function(index, val){
					cur_category_list[val.id] = val.name;
					category_list+='<option class="category_item" category_id='+val.id+'>'+val.name+'</option>';
				});
				$('.category').html(category_list);
				$('.category').attr('selected_id',data[0].id);
			};



function render_item(params){
	// the params is only one product item rather than product list, do not be confused by that "s"
	// it only indicate there are several fields for one product.
	var tmp_cat_lst=clone(cur_category_list);
	var cat_lst = '<option class="category_item" category_id='+params.category_id+'>'+tmp_cat_lst[params.category_id]+'</option>';
	var selected_id = params.category_id;
	delete tmp_cat_lst[params.category_id];
	
	for(var i in tmp_cat_lst){
		cat_lst+='<option class="category_item" category_id='+i+'>'+tmp_cat_lst[i]+'</option>';
	}
	
	
	var template ='\
			<li>\
				<div class="product_item" p_id='+params.id+' u_id='+params.user_id+'>\
					<div class="p_logo" style="width:100px; height:100px;background:url('+params.img+');"></div>\
					<div class="p_table">\
						<table style="margin-top:0px;">\
							<tr>\
								<td>name</td><td><input type="text" class="p_name" maxlength="50" value='+params.name+'></td>\
								<td rowspan=4 style="vertical-align:top;">description</td>\
								<td rowspan=4>\
									<textarea class="p_desc" rows=4  maxlength="200">'+params.description+'</textarea>\
								</td>\
							</tr>\
							<tr>\
								<td>category</td><td><select class="p_category" selected_id='+selected_id+'>'+cat_lst+'</select></td>\
							</tr>\
							<tr>\
								<td>price</td><td><input type="text" class="p_price" maxlength="8" value='+params.price+'></td>\
							</tr>\
							<tr>\
								<td>amount</td><td><input type="text" class="p_amnt" maxlength="6" value='+params.amnt+'></td>\
							</tr>\
						</table>\
					</div>\
					<button class="del_product">Delete Product</button>\
					<button class="edit_product">Update Product</button>\
				</div>\
			</li>\
			';
		return template;
};

// Similar to render_item but dedicated for render mystuff list item
function render_my_item(params){
	var tmp_cat_lst=clone(cur_category_list);
	var cat_lst = '<option class="category_item" category_id='+params.category_id+'>'+tmp_cat_lst[params.category_id]+'</option>';
	var selected_id = params.category_id;
	delete tmp_cat_lst[params.category_id];
	
	for(var i in tmp_cat_lst){
		cat_lst+='<option class="category_item" category_id='+i+'>'+tmp_cat_lst[i]+'</option>';
	}
	
	
	var template ='\
			<li>\
				<table style="width:530px;">\
					<tr>\
						<td rowspan=4 style="width:100px;heigth:100px;">\
							<div class="p_logo" style="width:100px; height:100px;background:url('+params.img+');"></div>\
						</td>\
						<td style="width:60px;">name</td>\
						<td style="width:165px;">\
							<input type="text" class="p_name" maxlength="50" value='+params.name+'>\
						</td>\
						<td style="width:165px;">description</td>\
					</tr>\
					<tr>\
						<td>category</td>\
						<td><select class="p_category" selected_id='+selected_id+'>'+cat_lst+'</select></td>\
						<td rowspan=3>\
							<textarea class="my_p_desc" rows=3  maxlength="200" \
							style="width:160px; height:70px; resize:none;">'+params.description+'</textarea>\
						</td>\
					</tr>\
					<tr>\
						<td>price</td>\
						<td><input type="text" class="p_price" maxlength="8" value='+params.price+'></td>\
					</tr>\
					<tr>\
						<td>amount</td>\
						<td><input type="text" class="p_amnt" maxlength="6" value='+params.amnt+'></td>\
					</tr>\
				</table>\
			</li>';
	return template;
};

			function fill_my_product(data){
					// return product list(data) looks like:
					/*	{
							total_num:r_num,
							page_list:result.rows
						}
					*/
					cur_my_product_info = clone(data);
					var p_list_str="No product found.";
					if(data.page_list.length>0) {
						p_list_str='';
						$.each(data.page_list, function(index, val){
							p_list_str+=render_my_item(val);
						});
					}
					$("#my_product_list_frame").html(p_list_str);
				};

			// generate product list and attach it to <ul> 
			function fill_product(data){
					// return product list(data) looks like:
					/*	{
							total_num:r_num,
							page_list:result.rows
						}
					*/
					cur_product_info = clone(data);
					var p_list_str="No product found.";
					if(data.page_list.length>0) {
						p_list_str='';
						$.each(data.page_list, function(index, val){
							p_list_str+=render_item(val);
						});
					}
					$("#product_list_frame").html(p_list_str);
					
					// this is the category dropbox selection event handler
					$('.p_category').change(function(){
						$(this).attr('selected_id',$(this).find("option:selected").attr("category_id"));
					});
					
					// this is the product delete button click event handler
					$(".del_product").click(function(){
						var del_info = {
							product_id:$(this).parent().attr('p_id')
						};
						
						// this just a wraper function 
						function d_product(data){
							if(data.authed){
								del_product(del_info, refresh_lst);
							}
							else {
								alert("User not authenticated.");
								not_authed();
							}
						};
						
						auth_user(d_product);
					});
					
					// this is the product update button click event handler
					$(".edit_product").click(function(){
						var updt_info = {
							product_id:$(this).parent().attr('p_id'),
							name:$(this).parent().find(".p_name").val(),
							category:$(this).parent().find(".p_category").attr("selected_id"),
							price:$(this).parent().find(".p_price").val(),
							amount:$(this).parent().find(".p_amnt").val(),
							description:$(this).parent().find(".p_desc").val()
						};
						
						// this just a wraper function 
						function u_product(data){
							if(data.authed){
								edit_product(updt_info, refresh_lst);
							}
							else {
								alert("User not authenticated.");
								not_authed();
							}
						};
						
						auth_user(u_product);
					});
										
			};

			function del_product(del_info, suc_cb, err_cb){
				// the del_info looks like
				/*
				{
					user_id:
					product_id:
				}
				*/
				$.ajax({
					url:"/d_product/",
					type:"POST",
					data:del_info,
					datatype:"JSON",
					success:function(data){
						if(data.suc){
							suc_cb();
							alert('Product deleted.');
						}
						else {
							alert('You can not delete this product.');
							suc_cb();
						}					
					},
					error:err_cb||function(err){alert(err.responseText);}
				});
			};

			function edit_product(updt_info, suc_cb, err_cb){
				// the del_info looks like
				// Right now, you can not change picture :(
				/*
						{
							product_id:
							name:
							category:
							price:
							amount:
							description:
						};
				*/
				$.ajax({
					url:"/u_product/",
					type:"POST",
					data:updt_info,
					datatype:"JSON",
					success:function(data){
						if(data.suc){
							suc_cb();
							alert('Product updated.');
						}
						else {
							alert('You can not edit this product.');
							suc_cb();
						}					
					},
					error:err_cb||function(err){alert(err.responseText);}
				});
			};


			// this part is for checking if a user logged in, and send back to client side
			// to change client login area style(such as lock the login textbox and set logout button)
			function set_user_login_info(){
				// when the page first loaded, we need to check if there has been already
				// user logged-in info, if so, we need lock user login text box and show 
				// logout button. 
				function suc_cb(data){
					//alert(data.message);
					if(data.authed){
						is_authed(data);
					}
					else {
						not_authed();
					}
				};
				auth_user(suc_cb);
			};

			function build_page_list(n){
				// n is total number of results return
				var total_pnum = 1;
				if(n>0){
					total_pnum = Math.floor(n/num_per_page)+((n%num_per_page==0)?0:1);
				}
				console.log(total_pnum);
				var page_num_list='';
				for (var i =0; i<total_pnum; i++){
					page_num_list += "<option offst="+i+">"+(i+1)+"</option>";
				}
				$('#page_num').html(page_num_list);
				$('#page_num').attr('current_offst',0);
			};

			function build_my_page_list(n){
				// n is total number of results return
				var total_pnum = 1;
				if(n>0){
					total_pnum = Math.floor(n/num_per_page)+((n%num_per_page==0)?0:1);
				}
				console.log(total_pnum);
				var page_num_list='';
				for (var i =0; i<total_pnum; i++){
					page_num_list += "<option offst="+i+">"+(i+1)+"</option>";
				}
				$('#my_page_num').html(page_num_list);
				$('#my_page_num').attr('current_offst',0);
			};

			function refresh_lst(){
				get_product(cur_r, fill_product);
				build_page_list(cur_product_info.total_num);
			};
			
			// similar to common product refreshing but for my product
			function refresh_my_lst(data){
				get_my_product(cur_my_r, fill_my_product);
				build_my_page_list(cur_my_product_info.total_num);
			};
			


/////////////////////////////////////////////////////////////////////////////////////////////////////////

function init_category_product(){
	get_category( fill_category );
	var init_req = {
		category_id:cur_category_list[0].id,
		result_num:num_per_page,
		offst:0
	};
	get_product(init_req, fill_product);
};


// fill cur_r with current page params.
function bld_qstr(){
	cur_r={};
	var category_id = $("#category1").attr("selected_id");
	
	cur_r.category_id = category_id;
	
	var keywd;
	if($("#keywd").val().trim().length>0){
		keywd = $("#keywd").val().trim().split(' ');
		cur_r.keywd = keywd;
	}
	
	cur_r.result_num = num_per_page;
	cur_r.offst = 0;
	//cur_r.offst = $('#page_num').attr('current_offst');
	console.log(cur_r);
};

function bld_my_qstr(){
	cur_my_r={};

/*
	var category_id = $("#category1").attr("selected_id");
	
	cur_my_r.category_id = category_id;
	
	var keywd;
	if($("#keywd").val().trim().length>0){
		keywd = $("#keywd").val().trim().split(' ');
		cur_r.keywd = keywd;
	}
*/
	cur_my_r.result_num = num_per_page;
	cur_my_r.offst = 0;
	//cur_r.offst = $('#page_num').attr('current_offst');
	console.log(cur_r);
};

			function init_load(){
			// this part is for adjusting the layout
				var ww = $(window).width();
				var hw = $("#header").width();
				if((ww-hw)/2 > 0){
					$("#header,#footer").css("left",(ww-hw)/2);
				}
				else {
					$("#header,#footer").css("left",0);
				}
				
				var cw = $("#content").width();
				if((ww-cw)/2 > 15){
					$("#content").css("left",(ww-cw)/2-15);
				}
				else {
					$("#content").css("left",0);
				}
				
				var wh = $(window).height();
				var hh = $("#header").height();
				
				$("#edit_tab").css("top",0.5*(wh-$("#edit_tab").height())+"px");
				$("#admin_tab").css("top",0.5*(wh-$("#admin_tab").height())+"px");
				var plfh = wh-2*hh;
				$('#product_list_frame').height(plfh-50);
				
				
				get_category(fill_category);	
				set_user_login_info();




				bld_qstr();
				refresh_lst();
				// this is the end of init_load();	
			};
			init_load();


		function block_right_click(t_f){
			if(t_f){
				if (document.addEventListener) {
					document.addEventListener('contextmenu', function(e) {
						alert("WELCOME TO ONLINE GROCERY STORE.");
						e.preventDefault();
					}, false);
				} else {
					document.attachEvent('oncontextmenu', function() {
						alert("WELCOME TO ONLINE GROCERY STORE.");
						window.event.returnValue = false;
					});
				}
			}
		};
        
        function block_combine_key(t_f){
            $(document).keydown(function(e) {     
                if( e.ctrlKey && (e.keyCode == 16) )
                        alert("WELCOME TO ONLINE GROCERY STORE.");
                if( e.shiftKey && (e.keyCode == 17) )
                        alert("WELCOME TO ONLINE GROCERY STORE.");
            });
        }
        
        
			block_right_click(1);
            block_combine_key(1);



			$('#login').click(function(){
				function suc_cb(data){
					console.log(data);
					if(data.login){
						is_authed(data);
					}
					else {
						not_authed();
					}
				};
			// this function is for login button click
			// it could be login or logout
				function user_login(log_info, success_cb, error_cb){
					$.ajax({
						url:"/login/",
						type:"POST",
						datatype:'JSON',
						data:{
							'email':log_info.email,
							'passwd':log_info.passwd
						},
						success: success_cb,
						error: error_cb||function(err){alert(err.responseText);}
					});
				};
				var log_info = {
					email:$('#email').val().trim(),
					passwd:$('#passwd').val().trim()
				};
				user_login(log_info, suc_cb);
			});	

			$('.category').change(function(){
				$(this).attr('selected_id',$(this).find("option:selected").attr("category_id"));
			});
				
			$("#search").click(function(){
				bld_qstr();
				console.log("after build:",cur_r)
				refresh_lst();
			});
			$("#search_my").click(function(){
				// this just a wraper function 
				function suc_cb(data){
					if(data.authed){
						bld_my_qstr();
						console.log("after build:",cur_my_r)
						refresh_my_lst();
					}
					else {
						alert("User not authenticated.");
						not_authed();
					}
				};
				auth_user(suc_cb);
			});
			
			$(window).resize(function(){
				var ww = $(window).width();
				var hw = $("#header").width();
				if((ww-hw)/2 > 0){
					$("#header,#footer").css("left",(ww-hw)/2);
				}
				else {
					$("#header,#footer").css("left",0);
				}
				var cw = $("#content").width();
				if((ww-cw)/2 > 15){
					$("#content").css("left",(ww-cw)/2-15);
				}
				else {
					$("#content").css("left",0);
				}
					
				var wh = $(window).height();
				var hh = $("#header").height();

				$("#edit_tab").css("top",0.5*(wh-$("#edit_tab").height())+"px");
				$("#admin_tab").css("top",0.5*(wh-$("#admin_tab").height())+"px");
				var plfh = wh-2*hh;
				$('#product_list_frame').height(plfh-50);
				
				
			});
		
			$("#switch").click(function(){
				$('#edit_tab').toggleClass("open",500);
				if($("#switch").html()=="<br><br><br><br>►") {
					$("#switch").html("<br><br><br><br>◄");
				}
				else {
					$("#switch").html("<br><br><br><br>►");
				}
				});
							
			$("#switch_admin").click(function(){
				$('#admin_tab').toggleClass("open",500);
				if($("#switch_admin").html()=="<br><br><br><br><br><br><br><br>►") {
					$("#switch_admin").html("<br><br><br><br><br><br><br><br>◄");
				}
				else {
					$("#switch_admin").html("<br><br><br><br><br><br><br><br>►");
				}
				});	

			$("#preview").click(function(){
				$("#img_file").click();
				});

			$("#img_file").change(function(){
				window.URL = window.URL || window.webkitURL;
				
				var f = document.getElementById('img_file').files[0];
				if(f!=undefined){

	// Give image data to an image object
					var img = new Image();
					img.src = window.URL.createObjectURL(f);
	// Get the canvas drawing handler
					var preview = document.getElementById('preview');
					var ctx = preview.getContext('2d');

					img.onload = function(){
						var MAX_LEN=100;
						
						var w = this.width;
						var h = this.height;
					
						if(w>h){
							w = MAX_LEN;
							h = w*this.height/this.width;
						}
						else
						{
							h = MAX_LEN;
							w = h*this.width/this.height;
						}
						console.log(w+":"+h);
						ctx.clearRect(0,0,MAX_LEN,MAX_LEN);
						ctx.drawImage(img, 0,0,w,h);
					};
				}
			//this is the end of img_file change.	
			});	
			
			$('#add_new').click(function(){
				// client provides product info( self-info, category_id), server uses 
				// session user_id, use date() as date_reg, date_rev
				
				
				//get image data and build the post form
				var preview = document.getElementById('preview');
				var img_data = preview.toDataURL();
				var product_form = {
					name:$("#product_name").val(),
					category:$("#product_category").attr("selected_id"),
					price:$("#product_price").val(),
					amount:$("#product_amnt").val(),
					description:$("#product_desc").val(),
					img_data:img_data
				};
				
				function blank_form(){
					// After successful posting, we need to load a new empty form
					$("#product_name").val("");
					$("#product_price").val("");
					$("#product_amnt").val("");
					$("#product_desc").val("");
				};
				
				function suc_cb(data){
					if(data.authed){
						$.ajax({
							url:"/a_product/",
							type:"POST",
							data:{
								product_info:product_form,
							},
							datatype:"JSON",
							success:function(sts){
								// if server updata this product info,
								// it will return sts.cuc==true and allow 
								// this page to update product list.
								if(sts.suc){
									alert("New product added");
									// here should add update product list.
									blank_form();
								}
								else {
									alert("Please check login info.");
								}
							},
							error:function(err){alert(err.responseText);}
						});
					}
					else {
						alert("User not authenticated.");
						not_authed();
					}
				};
				
				var v = valid_form(product_form);
				if(v.valid){
					auth_user(suc_cb);
					
				}
				else {
					alert(v.tips);
				}
			});

			$("#page_num").change(function(){
				$(this).attr('current_offst',$(this).find("option:selected").attr("offst"));
				cur_r.offst = $(this).attr('current_offst')*num_per_page;
				console.log("after change page#:",cur_r);
				get_product(cur_r, fill_product);
			});

			$("#my_page_num").change(function(){
				$(this).attr('current_offst',$(this).find("option:selected").attr("offst"));
				cur_my_r.offst = $(this).attr('current_offst')*num_per_page;
				console.log("after change my page#:",cur_my_r);
				get_my_product(cur_my_r, fill_my_product);
			});

			$("#chg_pswd").click(function(){
				
				function chg_pswd(data){
					if(data.authed){
						var passwd1=prompt("Input your new password.");
						var passwd2=prompt("Re-Input your new password.");
						if(passwd1.trim()==passwd2.trim()){
							$.ajax({
								url:"/u_pswd/",
								type:"POST",
								data:{new_pswd:passwd1},
								datatype:"JSON",
								success:function(d){
									if(d.suc){
										alert("Password changed!");
									}
								},
								error:function(e){alert(e.responseText);}
							});	

						}
						else {
							alert("New pasword not matched in two inputs!");
						}
					}
					else {
						alert("User not authed!");
					}
				};
				
				auth_user(chg_pswd);
			});


// CURIOUS WHY THERE IS NO EVENT HANDLER FOR DELETE AND UPDATE?
// I register DELETE and UPDATE button click event in fill_product() function
// because we need to register this call back to newly generated elements, otherwise
// they will never work.






			
			// this is the end of jQuery(function($))
			});
	</script>
	
</body>

</html>
